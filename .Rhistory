library(survival, lib.loc = "C:/Program Files/R/R-4.4.1/library")
x <- c(4,54,6,56,56,)
x <- c(4,54,6,56,56,6)
library('dplyr')
install.packages('IRkernel')
IRkernel::installspec()
install.packages("ggplot2")
IRkernel::installspec()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyplots")
install.packages("dplyr")
install.packages("tidyplots")
install.packages("ggplot2")
library('ggplo2')
library('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages(lib="ggplot2",destdir = 'C:/Users/israel/AppData/Local/R/win-library/4.4')
install.packages(lib="ggplot2",destdir = 'C:\Users\israel\AppData\Local\R\win-library\4.4')
install.packages(pkgs="ggplot2",destdir = 'C:\Users\israel\AppData\Local\R\win-library\4.4')
install.packages("ggplot2",destdir = "C:\Users\israel\AppData\Local\R\win-library\4.4")
a <- "C:\Users\israel\AppData\Local\R\win-library\4.4"
install.packages("ggplot2")
install.packages("tidyr")
print(pl)
pl <- ggplot(mtcars, aes(x = wt, y=mpg)) + geom_point()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
head(mtcars)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
install.packages("ggthemes")
source("~/.active-rstudio-document")
pl <- ggplot(mpg, aes(x =hwy) + geom_histogram()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
library(ggplot2)
pl <- ggplot(mpg, aes(x = hwy) + geom_histogram()
print(pl)
source("~/.active-rstudio-document")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
source("~/demo.R")
install.packages("shiny")
install.packages("shinydashboardPlus")
rm()
rm(list = ls())
clear
source("D:/Trabajo/Code/Spotify Wrapped/processing.R")
library(ggplot2)
library(tidyverse)
df <- read.csv('spotify_history.csv')
df <- read.csv('spotify_history.csv')
df <- read.csv('spotify_history.csv',header = TRUE, sep = ",")
source("D:/Trabajo/Code/Spotify Wrapped/processing.R")
library(tidyverse)
library(lubridate)
library(gghighlight)
library(ggthemes)
library(ggridges)
library(ggplot2)
library(treemapify)
library(viridis)
library(hrbrthemes)
library(ggwordcloud)
library(ggdark)
rm(list = ls())
getwd()
setwd("D:/Trabajo/Code/Spotify_Wrapped")
getwd()
df <- read.csv("spotify_data/spotify_history.csv", header = TRUE)
# Preparing the data
spotify <- df %>%  mutate(
ts = ymd_hms(ts),
hour = hour(ts), # Convert character to timestamp
date = as.Date(ts), # Extract date
seconds = ms_played / 1000       # Calculate seconds from milliseconds
) %>%
mutate(
year = year(date), # Extract year
month_num = month(date), # Extract month
day = day(date), # Extract day
day_of_week = wday(date, label = TRUE, abbr = FALSE) # Extract day of week
) %>%
mutate(
month = month.abb[month_num]
) %>%
select(
platform,
hour,
track_name,
artist_name,
seconds,
album_name,
year,
month,
day,
day_of_week
)  # Select columns of interest
View(spotify)
View(spotify)
library(ggpubr)
ggqqplot(spotify$seconds)
library(tidyverse)
library(lubridate)
library(gghighlight)
library(ggthemes)
library(ggridges)
library(ggplot2)
library(treemapify)
library(viridis)
library(hrbrthemes)
library(ggwordcloud)
library(ggdark)
rm(list = ls())
getwd()
setwd("D:/Trabajo/Code/Spotify_Wrapped")
getwd()
df <- read.csv("spotify_data/spotify_history.csv", header = TRUE)
# Preparing the data
spotify <- df %>%  mutate(
ts = ymd_hms(ts),
hour = hour(ts), # Convert character to timestamp
date = as.Date(ts), # Extract date
seconds = ms_played / 1000       # Calculate seconds from milliseconds
) %>%
mutate(
year = year(date), # Extract year
month_num = month(date), # Extract month
day = day(date), # Extract day
day_of_week = wday(date, label = TRUE, abbr = FALSE) # Extract day of week
) %>%
mutate(
month = month.abb[month_num]
) %>%
select(
platform,
hour,
track_name,
artist_name,
seconds,
album_name,
year,
month,
day,
day_of_week
)  # Select columns of interest
library(car)
qqPlot(spotify$seconds)
library(ggpubr)
ggqqplot(spotify$seconds)
shapiro.test(spotify$seconds)
skewness <- skewness(spotify$seconds, na.rm = TRUE)
install.packages("moments")
library(moments)
#	Distribution of track duration
skewness <- skewness(spotify$seconds, na.rm = TRUE)
print(skewness)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value + 50,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 50,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
median_value <- median(spotify$seconds, na.rm = TRUE)
mean_value <- mean(spotify$seconds, na.rm = TRUE)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value + 50,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 50,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
print(hist_tracks)
median_value <- median(spotify$seconds, na.rm = TRUE)
mean_value <- mean(spotify$seconds, na.rm = TRUE)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value + 50,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 50,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
geom_vline(
aes(xintercept = median_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
print(hist_tracks)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value + 50,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 50,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
geom_vline(
aes(xintercept = median_value),
color = "white",
linewidth = 1,
linetype = "dashed-dotted"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
print(hist_tracks)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value + 50,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 50,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
geom_vline(
aes(xintercept = median_value),
color = "white",
linewidth = 1,
linetype = "dotted"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
print(hist_tracks)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value - 50,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 50,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
geom_vline(
aes(xintercept = median_value),
color = "white",
linewidth = 1,
linetype = "dotted"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
print(hist_tracks)
hist_tracks <- ggplot(spotify, aes(seconds)) +
geom_histogram(
aes(y = after_stat(density)),
bins = 300,
fill = "#6fcd64",
color = "white"
) +
annotate(
"text",
x = mean_value - 40,
y = 0.015, label = paste("Mean =", round(mean_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
annotate(
"text",
x = median_value + 40,
y = 0.015, label = paste("Median =", round(median_value), "s"),
color = "white",
size = 4,
fontface = "bold"
) +
geom_vline(
aes(xintercept = mean_value),
color = "white",
linewidth = 1,
linetype = "dashed"
) +
geom_vline(
aes(xintercept = median_value),
color = "white",
linewidth = 1,
linetype = "dotted"
) +
labs(
title = "Distribution of seconds listened per song",
x = "Track Duration (s)",
y = "Density"
) +
coord_cartesian(xlim = c(0, 400)) +
dark_theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
print(hist_tracks)
